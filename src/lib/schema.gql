
type User {
  _id: String!
  name: String!
  email: String!
  pwd: String!
  level: String!
}

type Todo {
  _id: ID!
  title: String!
  description: String!
  for: [String]!
  shouldBeIn: String!
  tagId: [String]!
}

type Tag {
  _id: ID!
  name: String!
  publishBy: String!
  description: String!
  color: String!
}

type Recipie {
  _id: ID!
  title: String!
  ingredients: [String]!
  steps: [String]!
  tagsId: [String]!
}

type OrderInfo {
  quantity: Float!
  description: String!
  total: Float!
  date: String!
}

type Order {
  _id: ID!
  info: [OrderInfo]!
  total: Float!
  prepay: Float!
  topay: Float!
}

type Client {
  name: String!
  telephones: [String]!
  emails: [String]!
  direction: [String]!
  tagID: [string]
}

type Query {
  " users "
  getAllUsers: [User]
  getOneUserById(id: ID!): User
  " todo "
  getAllTodos: [Todo]
  getOneTodoById(id: ID!): Todo
  " tag "
  getAllTags: [Tag]
  getOneTagById(id: ID!): Tag
  " recipie "
  getAllRecipies: [Recipie]
  getOneRecipie(id: ID!): Recipie
}